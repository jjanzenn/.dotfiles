- name: Provision Macbook Pro
  hosts: hosts
  gather_facts: true

  vars:
    home: /Users/jjanzen
    wallpaper_path: "{{ home }}/.wallpaper"
    config_dir: "{{ home }}/.config"
    fonts_dir: "{{ home }}/Library/Fonts"
    exec_path: "{{ home }}/.local/bin"

  tasks:
    - name: Configure Homebrew taps
      community.general.homebrew_tap:
        name:
          - d12frosted/emacs-plus
          - homebrew/bundle
          - homebrew/cask-fonts
          - homebrew/cask-versions
          - homebrew/services
          - jorgelbg/tap
          - nikitabobko/tap

    - name: Update homebrew
      community.general.homebrew:
        update_homebrew: true
        upgrade_all: true

    - name: Install basic packages
      package:
        name:
          - aescrypt
          - aspell
          - autoconf
          - automake
          - bash-language-server
          - bear
          - bison
          - cabal-install
          - choose-gui
          - clang-format
          - cmake
          - cmake-language-server
          - conan
          - curl
          - dasel
          - delta
          - dos2unix
          - eza
          - ffmpeg
          - findutils # TODO: make alias or something gfind -> find
          - gcc
          - ghc
          - gnupg
          - gnuplot
          - gnu-sed
          - gnu-tar
          - gnutls
          - go
          - gopls
          - gpgme
          - haskell-language-server
          - htop
          - hunspell
          - hyfetch
          - imagemagick
          - inetutils
          - ispell
          - jansson
          - lesspipe
          - libassuan@2
          - libgccjit
          - librsvg
          - mailutils
          - marksman
          - meson
          - mpv
          - ninja
          - node
          - openjdk
          - p7zip
          - pandoc
          - pinentry-mac
          - pinentry-touchid
          - pipx
          - pkg-config
          - poppler
          - pup
          - ripgrep
          - rsync
          - rustup
          - shellcheck
          - shfmt
          - texlive
          - typescript-language-server
          - wget
          - yaml-language-server
          - yt-dlp
          - zig
          - zlib
          - zls
          - zsh-autosuggestions
          - zsh-syntax-highlighting
        state: latest

    - name: Install cask packages
      package:
        name:
          - aerospace
          - audacity
          - blender
          - cabal
          - calibre
          - desmume
          - discord
          - dolphin
          - dwarf-fortress-lmp
          - firefox
          - ghostty
          - gimp
          - godot
          - gzdoom
          - inkscape
          - keepingyouawake
          - krita
          - librewolf
          - multimc
          - obs
          - openemu
          - openmw
          - pokemon-showdown
          - proton-drive
          - proton-mail-bridge
          - protonvpn
          - qbittorrent
          - rar
          - homebrew/cask/syncthing
          - thunderbird
          - tor-browser
          - vlc
          - whisky
          - zotero
        state: latest

    - name: Install Source Code Pro Nerd Font
      unarchive:
        src: fonts/SauceCodeProNerdFont.tar.gz
        dest: "{{ fonts_dir }}"
      register: font

    - name: Install Atkinson Hyperlegible Font
      unarchive:
        src: fonts/AtkinsonHyperlegibleNext.tar.gz
        dest: "{{ fonts_dir }}"
      register: font

    - name: Install Atkinson Hyperlegible Mono Font
      unarchive:
        src: fonts/AtkinsonHyperlegibleMono.tar.gz
        dest: "{{ fonts_dir }}"
      register: font

    - name: Install Nerd Font Symbols
      unarchive:
        src: fonts/NerdFontSymbols.tar.gz
        dest: "{{ fonts_dir }}"
      register: font

    - name: Reset font cache
      command: fc-cache -f
      when: font.changed

    - name: Install python formatter
      community.general.pipx:
        name: black
        executable: /opt/homebrew/bin/pipx
        state: latest

    - name: Install python linter
      community.general.pipx:
        name: pylint
        state: latest
        executable: /opt/homebrew/bin/pipx

    - name: Install python lsp server
      community.general.pipx:
        name: python-lsp-server
        state: latest
        executable: /opt/homebrew/bin/pipx

    - name: Install ansible
      community.general.pipx:
        name: ansible
        state: latest
        install_deps: true
        executable: /opt/homebrew/bin/pipx

    - name: Install Emacs
      community.general.homebrew:
        name: emacs-plus@30
        install_options:
          - with-native-comp
          - with-imagemagick
          - with-xwidgets
          - with-mailutils
          - with-ctags
          - with-retro-emacs-logo-icon

    - name: Ensure script directory exists
      file:
        path: "{{ exec_path }}"
        recurse: true
        state: directory

    - name: Install deploy website script
      copy:
        src: scripts/deploy-website.sh
        dest: "{{ exec_path }}/deploy-website"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Install app launcher script
      copy:
        src: scripts/launcher.sh
        dest: "{{ exec_path }}/launcher"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Install remove quarantine script
      copy:
        src: scripts/remove-quarantine.sh
        dest: "{{ exec_path }}/remove-quarantine"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Install deploy Org backup script
      copy:
        src: scripts/backup-org.sh
        dest: "{{ exec_path }}/backup-org.sh"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Install wallpaper file
      copy:
        src: config/wallpaper.png
        dest: "{{ home }}/.wallpaper"
        owner: jjanzen
        group: staff
        mode: "0644"
      register: wallpaper

    - name: Configure macOS wallpaper
      command: osascript -e "tell application \"System Events\" to tell every desktop to set picture to \"{{ wallpaper_path }}\" as POSIX file"
      when: wallpaper.changed

    - name: Ensure aerospace config dir exists
      file:
        path: "{{ config_dir }}/aerospace"
        recurse: true
        state: directory

    - name: Configure aerospace
      copy:
        src: config/aerospace.toml
        dest: "{{ config_dir }}/aerospace/aerospace.toml"
        owner: jjanzen
        group: staff
        mode: "0644"
      register: aerospace

    - name: reload aerospace configuration
      command: aerospace reload-config
      when: aerospace.changed

    - name: configure clang-format
      copy:
        src: config/clang-format.yaml
        dest: "{{ home }}/.clang-format"
        owner: jjanzen
        group: staff
        mode: "0644"

    - name: Ensure ghostty config dir exists
      file:
        path: "{{ config_dir }}/ghostty"
        recurse: true
        state: directory

    - name: Configure ghostty
      copy:
        src: config/ghostty.ini
        dest: "{{ config_dir }}/ghostty/config"
        owner: jjanzen
        group: staff
        mode: "0644"

    - name: Ensure git config dir exists
      file:
        path: "{{ config_dir }}/git"
        recurse: true
        state: directory

    - name: Configure git
      copy:
        src: config/git.ini
        dest: "{{ config_dir }}/git/config"
        owner: jjanzen
        group: staff
        mode: "0644"

    - name: Ensure ssh config dir exists
      file:
        path: "{{ home }}/.ssh"
        recurse: true
        state: directory

    - name: Configure git
      copy:
        src: config/ssh.conf
        dest: "{{ home }}/.ssh/config"
        owner: jjanzen
        group: staff
        mode: "0644"

    - name: Configure zsh
      copy:
        src: config/zshrc.sh
        dest: "{{ home }}/.zshrc"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Configure profile
      copy:
        src: config/profile.sh
        dest: "{{ home }}/.zshenv"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Ensure Emacs config directory exists
      file:
        path: "{{ config_dir }}/emacs"
        recurse: true
        state: directory

    - name: Install Emacs early init
      copy:
        src: config/emacs-early-init.el
        dest: "{{ config_dir }}/emacs/early-init.el"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Install Emacs init
      copy:
        src: config/emacs-init.el
        dest: "{{ config_dir }}/emacs/init.el"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Install Emacs RSS feed
      copy:
        src: config/emacs-feed.el
        dest: "{{ config_dir }}/emacs/feed.el"
        owner: jjanzen
        group: staff
        mode: "0755"

    - name: Ensure gpg config directory exists
      file:
        path: "{{ home }}/.gnupg"
        recurse: true
        state: directory

    - name: Configure GPG Agent
      copy:
        src: config/gpg-agent.conf
        dest: "{{ home }}/.gnupg/gpg-agent.conf"
        owner: jjanzen
        group: staff
        mode: "0644"
      register: gpg

    - name: Reset GPG Agent
      command: gpgconf --kill gpg-agent
      when: gpg.changed
